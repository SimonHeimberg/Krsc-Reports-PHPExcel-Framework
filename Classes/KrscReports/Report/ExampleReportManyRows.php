<?php
namespace KrscReports\Report;

use KrscReports\Service;
use KrscReports\Views\AbstractView;
use KrscReports\Views\SingleTable;

/**
 * This file is part of KrscReports.
 *
 * Copyright (c) 2020 Krzysztof Ruszczyński
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 * @category KrscReports
 * @package KrscReports_Report
 * @copyright Copyright (c) 2020 Krzysztof Ruszczyński
 * @license http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL
 * @version 2.0.6, 2020-02-19
 */

/**
 * Example report creating table with 100 rows via Service.
 *
 * @category KrscReports
 * @package KrscReports_Report
 * @author Krzysztof Ruszczyński <http://www.ruszczynski.eu>
 */
class ExampleReportManyRows extends \KrscReports_Report_ExampleReport implements ReportWithServiceInterface
{
    /**
     * @var integer number of rows to create
     */
    protected $_iNumberOfRows = 100;

    /**
     * Method returns description of generated by that object worksheet.
     * @return string description of report
     */
    public function getDescription()
    {
        return 'Report with one table with 100 rows (made with \KrscReports\Service).';
    }

    /**
     * Method returning prepared view.
     *
     * @return \KrscReports\Views\AbstractView
     */
    public function getReportView()
    {
        $aDataForExcel = array();
        $iIterator = 1;
        for ($i = 0; $i < $this->_iNumberOfRows; $i++) {
            $aDataForExcel[] = array($iIterator++, $iIterator++, $iIterator++);
        }

        $oReportView = new SingleTable();
        $oReportView->addOptions(
            array(
                AbstractView::KEY_DOCUMENT_PROPERTIES => array(),
                AbstractView::KEY_USE_FROM_ARRAY => true,
            )
        );
        $oReportView->setData(
            $aDataForExcel,
            array('First column', 'Second column', 'Third column')
        );

        return $oReportView;
    }

    /**
     * Method responsible for creating service with generated report.
     * @return void
     */
    public function generate()
    {
        $oExcelService = new Service();
        $oExcelService->setSpreadsheetName('First_Spreadsheet');
        $oExcelService->setFileName('Krsc_Example_10');

        $oExcelService->setReportView(
            $this->getReportView()->setDocumentProperties()
        );
        $oExcelService->createReport();
    }
}
