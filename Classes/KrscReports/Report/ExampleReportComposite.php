<?php
namespace KrscReports\Report;

use KrscReports\Service;
use KrscReports\Views\AbstractView;
use KrscReports\Views\CompositeView;

/**
 * This file is part of KrscReports.
 *
 * Copyright (c) 2020 Krzysztof Ruszczyński
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 *
 * @category KrscReports
 * @package KrscReports_Report
 * @copyright Copyright (c) 2020 Krzysztof Ruszczyński
 * @license http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL
 * @version 2.1.0, 2020-02-24
 */

/**
 * Example creating report based on many reports via service and composite pattern.
 *
 * @category KrscReports
 * @package KrscReports_Report
 * @author Krzysztof Ruszczyński <http://www.ruszczynski.eu>
 */
class ExampleReportComposite extends \KrscReports_Report_ExampleReport implements ReportWithServiceInterface
{
    /**
     * Method returning description of generated by that object worksheet.
     *
     * @return string description of report
     */
    public function getDescription()
    {
        return 'Report made with composite view, contains many tables (made with \KrscReports\Service).';
    }

    /**
     * Method returning prepared view.
     *
     * @return \KrscReports\Views\AbstractView
     */
    public function getReportView()
    {
        $oReportView = new CompositeView();
        $oReportView->addOptions(
            array(
                AbstractView::KEY_COLUMN_LINES_BETWEEN_ELEMENTS => 4,
            )
        );

        foreach (self::$_aReports as $oReport) {
            if ($oReport instanceof ReportWithServiceInterface && $oReport !== $this) {
                $oReportView->addView($oReport->getReportView());
            }
        }

        return $oReportView;
    }

    /**
     * Method responsible for creating service with generated report.
     *
     * @return void
     */
    public function generate()
    {
        $oExcelService = new Service();
        $oExcelService->setFileName('Krsc_Example_14');

        $oExcelService->setReportView(
            $this->getReportView()->setDocumentProperties()
        );
        $oExcelService->createReport();
    }
}
